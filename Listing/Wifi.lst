C51 COMPILER V9.00   WIFI                                                                  08/28/2018 17:24:45 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE WIFI
OBJECT MODULE PLACED IN .\Output\Wifi.obj
COMPILER INVOKED BY: E:\Program Files\keil5\C51\BIN\C51.EXE Modules\Wifi.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEX
                    -TEND PRINT(.\Listing\Wifi.lst) TABS(2) OBJECT(.\Output\Wifi.obj)

line level    source

   1          /*****************************************************************
   2          **                   大连理工大学 创新创业学院
   3          **                       物联网应用工坊
   4          **---------------------------------------------------------------
   5          ** 项目名称：   WTZP1.0-BlueBerry
   6          ** 日    期：   2018-07-19
   7          ** 作    者：   温武军
   8          **---------------------------------------------------------------
   9          ** 文 件 名：   Wifi.c
  10          ** 文件说明：   wifi功能模块
  11          *****************************************************************/
  12          /*---------------------INCLUDES----------------------*/
  13          #include "Wifi.h"
  14          
  15          /*---------------------VARIABLES---------------------*/
  16          char xdata Link[110]="{\"t\": 1,\"device\": \"BlueBerry\",\"key\":\"d9b8d549677e42d989f35401b6c0790f\",\"v
             -er\":\"v1.0\"}";
  17          char xdata Date[300]="{\"t\":3,\"datatype\":1,\"datas\":{\"Ph";
  18          char xdata DateMid1[10]="\":0";
  19          char xdata DateMid2[10]=",\"";
  20          char xdata DateBack[14]="},\"msgid\":12}";
  21          char xdata BeatQus[7]="$#AT#\r";
  22          char xdata BeatAck[7]="$OK##\r";
  23          char xdata WIFICommendAck[110]="{\"t\":3,\"datatype\":1,\"datas\":{\"PhControl";  
  24          char KeyName[7][9]={{"Ph"},{"LiquidT"},{"Humidity"},{"Lux"},{"Temp"},{"EC"},{"CO2"}};//传感器识别码
  25          extern uint8 MOSHand[4],MOSAuto[4];
  26          extern char ControlKeyName[6][15];//泵控制识别码
  27          int8 SensorKeyLen[7]={2,7,8,3,4,2,3};//传感器识别码长度
  28          int8 ControlKeyLen[4]={9,7,12,7};//泵控制识别码长度
  29          char xdata WIFIAck[64];
  30          extern uint16 DateLiquidT;extern uint16 DateCO2;extern int16 DatePh;extern uint16 DateHumidity;
  31          extern uint16 DateTemp;extern int16 DateEc;extern uint32 DateLux;
  32          uint8 WIFIReccount=0;//WIFI数组标志位
  33          
  34          /*---------------------FUNCTIONS---------------------*/
  35          /***********************************************************************
  36          ** 函 数 名： JsonKeyRec()
  37          ** 函数说明： 获取JSON键值
  38          **---------------------------------------------------------------------
  39          ** 输入参数： 目标键名，键值储存地址,搜索目标字符串
  40          ** 返回参数： 键值的地址
  41          ***********************************************************************/
  42          char* JsonKeyRec(char *JsonKey,char *JSONp)
  43          {
  44   1        char *ValueAddr;
  45   1        char *JsonKeyStart;//键名开始的地址
  46   1        char *JsonKeyEnd;//键名结束的地址
  47   1        char JsonKeyLength;//键名长度
  48   1        JsonKeyStart=strstr(JSONp,JsonKey);
  49   1        JsonKeyLength=strlen(JsonKey);
  50   1        JsonKeyEnd=JsonKeyStart+JsonKeyLength;
  51   1        if(JsonKeyStart != 0 && *(JsonKeyStart - 1) == '\"' && *(JsonKeyEnd) == '\"' && *(JsonKeyEnd + 1) == ':')
  52   1        {
  53   2          ValueAddr=JsonKeyEnd+3;
C51 COMPILER V9.00   WIFI                                                                  08/28/2018 17:24:45 PAGE 2   

  54   2        }
  55   1        return ValueAddr;
  56   1      }
  57          /***********************************************************************
  58          ** 函 数 名： JsonKeyCmp()
  59          ** 函数说明： 对比获取JSON键值
  60          **---------------------------------------------------------------------
  61          ** 输入参数： JsonKey目标键名，键值储存地址,JSONp搜索目标字符串
  62          ** 返回参数： 键值的地址
  63          ***********************************************************************/
  64          uint8 JsonKeyCmp(char *JsonKey,char *JSONp)
  65          {
  66   1        char *JsonKeyEnd;//键名结束的地址
  67   1        char JsonKeyLength;//键名长度
  68   1        char MiusCount=0,i;
  69   1        JsonKeyLength=strlen(JsonKey);
  70   1        JsonKeyEnd=JSONp+JsonKeyLength;
  71   1        for(i=0;i<4;i++)
  72   1        {
  73   2          MiusCount=MiusCount+JSONp[i]-JsonKey[i];
  74   2        }
  75   1        return MiusCount;
  76   1      }
  77          /***********************************************************************
  78          ** 函 数 名： WifiLink()
  79          ** 函数说明： 与云平台台建立链接
  80          **---------------------------------------------------------------------
  81          ** 输入参数： 无
  82          ** 返回参数： 无
  83          ***********************************************************************/
  84          void WifiLink()
  85          {
  86   1        UartSend2_str(Link);
  87   1      }
  88          /***********************************************************************
  89          ** 函 数 名： WifiBeat()
  90          ** 函数说明： 与云平台台建立心跳连接
  91          **---------------------------------------------------------------------
  92          ** 输入参数： 无
  93          ** 返回参数： 无
  94          ***********************************************************************/
  95          void WifiBeat()
  96          {
  97   1        uint8 *A_Flag=0;
  98   1        uint8 *Q_Flag=0;
  99   1        A_Flag=strstr(WIFIAck,BeatQus);
 100   1        Q_Flag=strstr(WIFIAck,BeatAck);
 101   1        if(A_Flag)
 102   1        {
 103   2          UartSend2_str(BeatAck);
 104   2        }
 105   1        if(Q_Flag)
 106   1        {
 107   2          UartSend2_str(BeatQus);
 108   2        }
 109   1      }
 110          /***********************************************************************
 111          ** 函 数 名： JsonMakePak1()
 112          ** 函数说明： 组包(只打包一个数据)
 113          **---------------------------------------------------------------------
 114          ** 输入参数： int8 rank,uint32 value
 115          ** 返回参数： uint16,键值的地址
C51 COMPILER V9.00   WIFI                                                                  08/28/2018 17:24:45 PAGE 3   

 116          ***********************************************************************/
 117          /*uint16 JsonMakePak1(int8 rank,uint32 value)
 118          {
 119            char DateKeyStart=30;
 120            uint8 DateValueLen;
 121            switch(rank)
 122            {
 123              case 0:strcpy(Date+DateKeyStart,KeyName[0]);break;//使数据指针指向数据首地址
 124              case 1:strcpy(Date+DateKeyStart,KeyName[1]);break;
 125              case 2:strcpy(Date+DateKeyStart,KeyName[2]);break;
 126              case 3:strcpy(Date+DateKeyStart,KeyName[3]);break;
 127              case 4:strcpy(Date+DateKeyStart,KeyName[4]);break;
 128              case 5:strcpy(Date+DateKeyStart,KeyName[5]);break;
 129              case 6:strcpy(Date+DateKeyStart,KeyName[6]);break;
 130            }
 131            DateValueLen=sprintf(DateMid1+2,"%d",value);
 132            strcat(Date,DateMid1);
 133            strcat(Date,DateBack);
 134            return Date;
 135          }*/
 136          /***********************************************************************
 137          ** 函 数 名： JsonMakePak2()
 138          ** 函数说明： 组包(打包一组传感器数据)
 139          **---------------------------------------------------------------------
 140          ** 输入参数： 无
 141          ** 返回参数： uint16,键值的地址
 142          ***********************************************************************/
 143          uint16 JsonMakePak2()
 144          {
 145   1        uint8 DateValueLen=0;
 146   1        uint16 value1=0;
 147   1        int8 i=0;
 148   1        char xdata *DateKeyStart;
 149   1        DateKeyStart=Date+30;//使数据指针指向数据首地址
 150   1        for(i=0;i<7;i++)
 151   1        {
 152   2          strcpy(DateKeyStart,KeyName[i]);
 153   2          DateKeyStart=DateKeyStart+SensorKeyLen[i];
 154   2          *DateKeyStart=0;
 155   2          switch(i)
 156   2          {
 157   3            case 0:value1=DatePh/1000.0;break;//获得数据
 158   3            case 1:value1=DateLiquidT/10.0;break;
 159   3            case 2:value1=DateHumidity/10.0;break;
 160   3            case 3:value1=DateLux;break;
 161   3            case 4:value1=DateTemp/10.0;break;
 162   3            case 5:value1=DateEc;break;
 163   3            case 6:value1=DateCO2;break;
 164   3          }
 165   2          DateValueLen=sprintf(DateMid1+2,"%d",value1);
 166   2          strcat(Date,DateMid1);
 167   2          DateKeyStart=DateKeyStart+DateValueLen+2;
 168   2          *DateKeyStart=0;
 169   2          if(i!=6)
 170   2          {
 171   3            strcat(Date,DateMid2);
 172   3            DateKeyStart=DateKeyStart+2;
 173   3          }
 174   2        }
 175   1        strcat(Date,DateBack);
 176   1        return Date;
 177   1      }
C51 COMPILER V9.00   WIFI                                                                  08/28/2018 17:24:45 PAGE 4   

 178          /***********************************************************************
 179          ** 函 数 名： Wifidat()
 180          ** 函数说明： 发送一个传感器数据
 181          **---------------------------------------------------------------------
 182          ** 输入参数： int8 rank,int16 DAT
 183          ** 返回参数： 无
 184          ***********************************************************************/
 185          /*void Wifidat(int8 rank1,uint32 DAT)
 186          {
 187            JsonMakePak1(rank1,DAT);
 188            UartSend2_str(Date);
 189          }*/
 190          /***********************************************************************
 191          ** 函 数 名： WifidatPackt()
 192          ** 函数说明： 发送一组传感器数据
 193          **---------------------------------------------------------------------
 194          ** 输入参数： 无
 195          ** 返回参数： 无
 196          ***********************************************************************/
 197          void WifidatPack()
 198          {
 199   1        JsonMakePak2();
 200   1        UartSend2_str(Date);
 201   1      }
 202          /***********************************************************************
 203          ** 函 数 名： WifiComAck()
 204          ** 函数说明： 发送一个传感器数据
 205          **---------------------------------------------------------------------
 206          ** 输入参数： 无
 207          ** 返回参数： 无
 208          ***********************************************************************/
 209          uint16 WifiComAck()
 210          {
 211   1        uint8 DateValueLen=0;
 212   1        uint16 value1=0;
 213   1        int8 i=0;
 214   1        char xdata *DateKeyStart;
 215   1        DateKeyStart=WIFICommendAck+30;//使数据指针指向数据首地址
 216   1        for(i=0;i<4;i++)
 217   1        {
 218   2          strcpy(DateKeyStart,ControlKeyName[i]);
 219   2          DateKeyStart=DateKeyStart+ControlKeyLen[i];
 220   2          *DateKeyStart=0;
 221   2          switch(i)
 222   2          {
 223   3            case 0:value1=MOSAuto[0];break;//获得数据
 224   3            case 1:value1=MOSAuto[1];break;
 225   3            case 2:value1=MOSAuto[2];break;
 226   3            case 3:value1=MOSAuto[3];break;
 227   3          }
 228   2          DateValueLen=sprintf(DateMid1+2,"%d",value1);
 229   2          strcat(WIFICommendAck,DateMid1);
 230   2          DateKeyStart=DateKeyStart+DateValueLen+2;
 231   2          *DateKeyStart=0;
 232   2          if(i!=3)
 233   2          {
 234   3            strcat(WIFICommendAck,DateMid2);
 235   3            DateKeyStart=DateKeyStart+2;
 236   3          }
 237   2        }
 238   1        strcat(WIFICommendAck,DateBack);
 239   1        return WIFICommendAck;
C51 COMPILER V9.00   WIFI                                                                  08/28/2018 17:24:45 PAGE 5   

 240   1      }
 241          /***********************************************************************
 242          ** 函 数 名： WifiPack()
 243          ** 函数说明： 向云平台发送数据
 244          **---------------------------------------------------------------------
 245          ** 输入参数： 无
 246          ** 返回参数： 无
 247          ***********************************************************************/
 248          uint16 WifiPack()
 249          {
 250   1        char *datp;
 251   1        JsonMakePak2();
 252   1        WifiComAck();
 253   1        datp=strrchr(Date,'}');
 254   1        *datp=0;
 255   1        WIFICommendAck[0]=',';
 256   1        strcat(Date,WIFICommendAck);
 257   1        UartSend2_str(Date);
 258   1        return Date;
 259   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1364    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =    707      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
