C51 COMPILER V9.00   EC                                                                    08/23/2018 20:19:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EC
OBJECT MODULE PLACED IN .\Output\EC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Modules\EC.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -isting\EC.lst) TABS(2) OBJECT(.\Output\EC.obj)

line level    source

   1          /*****************************************************************
   2          **                   大连理工大学 创新创业学院
   3          **                       物联网应用工坊
   4          **---------------------------------------------------------------
   5          ** 项目名称：   WTZP1.0-BlueBerry
   6          ** 日    期：   2018-07-08
   7          ** 作    者：   温武军
   8          **---------------------------------------------------------------
   9          ** 文 件 名：   EC.h
  10          ** 文件说明：   电导率测量，目前测量的还不准确
  11          *****************************************************************/
  12          
  13          /*---------------------INCLUDES----------------------*/
  14          #include "EC.h"
  15          
  16          /*---------------------VARIABLES---------------------*/
  17          int16 ECTemp;
  18          int16 ECRealValue;
  19          int16 ECImageValue;
  20          
  21          float ECMagnitude;
  22          float ECRads;
  23          float ECRes;
  24          float ECCon;
  25          
  26          /*---------------------FUNCTIONS---------------------*/
  27          /***********************************************************************
  28          ** 函 数 名： InitAD5933()
  29          ** 函数说明： 初始化AD5933
  30          **---------------------------------------------------------------------
  31          ** 输入参数： 无
  32          ** 返回参数： 无
  33          ***********************************************************************/
  34          void InitAD5933(void)
  35          {
  36   1        AD5933WriteByte(0x82,0x0E); //起始频率 30kHz 1k/(16.776M/4)*2^27 =  30000*32  0x0EA600
  37   1        AD5933WriteByte(0x83,0xA6); 
  38   1        AD5933WriteByte(0x84,0x00);
  39   1        
  40   1        AD5933WriteByte(0x85,0x00); //频率增量 100Hz 5/(16.776M/4)*2^27 =  5*32 0x000064
  41   1        AD5933WriteByte(0x86,0x7D); //频率增量 1000Hz 0x7D02
  42   1        AD5933WriteByte(0x87,0x02);
  43   1      
  44   1        AD5933WriteByte(0x88,0x03); //增量数 1000   0x03E8
  45   1        AD5933WriteByte(0x89,0xE8);
  46   1      
  47   1        AD5933WriteByte(0x8A,0x00); //建立时间周期数 100  0x0064
  48   1        AD5933WriteByte(0x8B,0x64);
  49   1      
  50   1        AD5933WriteByte(0x80,0xB1); //控制寄存器，1011 0001 0000 0000待机模式，2V，一倍放大，内部时钟   0xB100
  51   1        AD5933WriteByte(0x81,0x00);
  52   1      
  53   1        AD5933WriteByte(0x80,0x11); //控制寄存器，0001 0001 0000 0000 以起始频率初始化，2V，一倍放大，内部时钟  0
             -x1100
C51 COMPILER V9.00   EC                                                                    08/23/2018 20:19:22 PAGE 2   

  54   1        delay10ms();
  55   1        AD5933WriteByte(0x80,0x21); //控制寄存器，0010 0001 0000 0000 启动频率扫描，2V，一倍放大，内部时钟  0x210
             -0
  56   1      }
  57          /***********************************************************************
  58          ** 函 数 名： Read_AD5933_Temperature(void)
  59          ** 函数说明： 读取温AD5933测量的温度
  60          **---------------------------------------------------------------------
  61          ** 输入参数： 无
  62          ** 返回参数： 无
  63          ***********************************************************************/
  64          void Read_AD5933_Temperature(void)
  65          {
  66   1        uint8 s;
  67   1        
  68   1        //启动温度测量
  69   1        AD5933WriteByte(0x80,0x93); //1001 0011
  70   1        do
  71   1          {
  72   2            s=AD5933Read(0x8F);
  73   2        
  74   2        }while(!(s&0x01));
  75   1        
  76   1        
  77   1        //读出温度，保存在ECTemp中
  78   1        ECTemp=(int16)((AD5933Read(0x92)*256+AD5933Read(0x93))<<2);
  79   1        ECTemp=(ECTemp>>2)/32;
  80   1      }
  81          /***********************************************************************
  82          ** 函 数 名： EC(void)
  83          ** 函数说明： 完成电导率转换
  84          **---------------------------------------------------------------------
  85          ** 输入参数： 无
  86          ** 返回参数： 无
  87          ***********************************************************************/
  88          float EC(void)
  89          {
  90   1        uint8 s;
  91   1        
  92   1        InitAD5933();
  93   1        
  94   1        while(1)
  95   1        {
  96   2          s=AD5933Read(0x8F);  //读取状态寄存器检查DFT是否完成
  97   2          if(s&0x02) break;
  98   2        }                  
  99   1      
 100   1        ECRealValue = (int16)(AD5933Read(0x94)*256+AD5933Read(0x95)); //实部
 101   1        ECImageValue = (int16)(AD5933Read(0x96)*256+AD5933Read(0x97)); //虚部
 102   1        ECMagnitude=sqrt(1.0*ECRealValue*ECRealValue+1.0*ECImageValue*ECImageValue);
 103   1        
 104   1        if((ECRealValue>0)&&(ECImageValue>0))
 105   1        {
 106   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI;
 107   2        }
 108   1        else if((ECRealValue<0)&&(ECImageValue>0))
 109   1        {
 110   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 180;
 111   2        }
 112   1        else if((ECRealValue<0)&&(ECImageValue<0))
 113   1        {
 114   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 180;
C51 COMPILER V9.00   EC                                                                    08/23/2018 20:19:22 PAGE 3   

 115   2        }
 116   1        else if((ECRealValue>0)&&(ECImageValue<0))
 117   1        {
 118   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 360;
 119   2        }//计算相位
 120   1        ECRes=Cgain/ECMagnitude; //Ω
 121   1        ECCon=1000000L*Cce/(ECRes*cos(PI*(ECRads-SysPhase)/180)-SysRes); //μS/cm  
 122   1          
 123   1        AD5933WriteByte(0x80,0xA1); //控制寄存器，1010 0001 0000 0000 省电模式，2V，一倍放大，内部时钟  0xA100
 124   1        UartSend1_Byte(ECCon,2);
 125   1        return ECCon;
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    986    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
