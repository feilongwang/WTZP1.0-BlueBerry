C51 COMPILER V9.00   EC                                                                    07/08/2018 21:16:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EC
OBJECT MODULE PLACED IN .\Output\EC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Modules\EC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -\EC.lst) TABS(2) OBJECT(.\Output\EC.obj)

line level    source

   1          /*****************************************************************
   2          **                   大连理工大学 创新创业学院
   3          **                       物联网应用工坊
   4          **---------------------------------------------------------------
   5          ** 项目名称：   WTZP1.0-BlueBerry
   6          ** 日    期：   2018-07-08
   7          ** 作    者：   温武军
   8          **---------------------------------------------------------------
   9          ** 文 件 名：   EC.h
  10          ** 文件说明：   电导率测量
  11          *****************************************************************/
  12          
  13          /*---------------------INCLUDES----------------------*/
  14          #include "EC.h"
  15          
  16          /*---------------------VARIABLES---------------------*/
  17          int16 ECTemp;
  18          int16 ECRealValue;
  19          int16 ECImageValue;
  20          
  21          float ECMagnitude;
  22          float ECRads;
  23          float ECRes;
  24          float ECCon;
  25          
  26          /*---------------------FUNCTIONS---------------------*/
  27          /***********************************************************************
  28          ** 函 数 名： AD5933Init()
  29          
  30          
  31          ** 函数说明： 初始化AD5933
  32          **---------------------------------------------------------------------
  33          ** 输入参数： 无
  34          ** 返回参数： 无
  35          ***********************************************************************/
  36          void AD5933Init(void)
  37          {
  38   1        AD5933WriteByte(0x82,0x0E); //起始频率 30kHz 1k/(16.776M/4)*2^27 =  30000*32  0x0EA600
  39   1        AD5933WriteByte(0x83,0xA6);
  40   1        AD5933WriteByte(0x84,0x00);
  41   1      
  42   1        AD5933WriteByte(0x85,0x00); //频率增量 100Hz 5/(16.776M/4)*2^27 =  5*32 0x000064
  43   1        AD5933WriteByte(0x86,0x00);
  44   1        AD5933WriteByte(0x87,0x64);
  45   1      
  46   1        AD5933WriteByte(0x88,0x00); //增量数 100  0x0064
  47   1        AD5933WriteByte(0x89,0x64);
  48   1      
  49   1        AD5933WriteByte(0x8A,0x00); //建立时间周期数 100  0x0064
  50   1        AD5933WriteByte(0x8B,0x64);
  51   1      
  52   1          AD5933WriteByte(0x80,0xB1); //控制寄存器，1011 0001 0000 0000待机模式，2V，一倍放大，内部时钟   0xB100
  53   1        AD5933WriteByte(0x81,0x00);
  54   1      
C51 COMPILER V9.00   EC                                                                    07/08/2018 21:16:53 PAGE 2   

  55   1        AD5933WriteByte(0x80,0x11); //控制寄存器，0001 0001 0000 0000 以起始频率初始化，2V，一倍放大，内部时钟  0
             -x1100
  56   1        delay10ms();
  57   1        AD5933WriteByte(0x80,0x21); //控制寄存器，0010 0001 0000 0000 启动频率扫描，2V，一倍放大，内部时钟  0x210
             -0
  58   1      }
  59          /***********************************************************************
  60          ** 函 数 名： Read_AD5933_Temperature(void)
  61          ** 函数说明： 读取温AD5933测量的温度
  62          **---------------------------------------------------------------------
  63          ** 输入参数： 无
  64          ** 返回参数： 无
  65          ***********************************************************************/
  66          void Read_AD5933_Temperature(void)
  67          {
  68   1        uint8 s;
  69   1          
  70   1        //启动温度测量
  71   1        AD5933WriteByte(0x80,0x93); //1001 0011
  72   1      
  73   1        do
  74   1          {
  75   2            s=AD5933Read(0x8F);
  76   2        
  77   2        }while(!(s&0x01));
  78   1        
  79   1        //读出温度，保存在ECTemp中
  80   1        ECTemp=(int16)((AD5933Read(0x92)*256+AD5933Read(0x93))<<2);
  81   1        ECTemp=(ECTemp>>2)/32;
  82   1      }
  83          /***********************************************************************
  84          ** 函 数 名： AD5933(void)
  85          ** 函数说明： 完成电导率转换
  86          **---------------------------------------------------------------------
  87          ** 输入参数： 无
  88          ** 返回参数： 无
  89          ***********************************************************************/
  90          void EC(void)
  91          {
  92   1        uint8 s;
  93   1        AD5933Init();
  94   1      
  95   1        while(1)
  96   1        {
  97   2          s=AD5933Read(0x8F);  //读取状态寄存器检查DFT是否完成
  98   2          if(s&0x02) break;
  99   2        }                  
 100   1      
 101   1        ECRealValue = (int16)(AD5933Read(0x94)*256+AD5933Read(0x95)); //实部
 102   1        ECImageValue = (int16)(AD5933Read(0x96)*256+AD5933Read(0x97)); //虚部
 103   1        ECMagnitude=sqrt(1.0*ECRealValue*ECRealValue+1.0*ECImageValue*ECImageValue);
 104   1        
 105   1        if((ECRealValue>0)&&(ECImageValue>0))
 106   1        {
 107   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI;
 108   2        }
 109   1        else if((ECRealValue<0)&&(ECImageValue>0))
 110   1        {
 111   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 180;
 112   2        }
 113   1        else if((ECRealValue<0)&&(ECImageValue<0))
 114   1        {
C51 COMPILER V9.00   EC                                                                    07/08/2018 21:16:53 PAGE 3   

 115   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 180;
 116   2        }
 117   1        else if((ECRealValue>0)&&(ECImageValue<0))
 118   1        {
 119   2          ECRads=180*atan2(ECImageValue,ECRealValue)/PI + 360;
 120   2        }
 121   1      
 122   1        ECRes=Cgain/ECMagnitude; //Ω
 123   1        ECCon=1000000L*Cce/(ECRes*cos(PI*(ECRads-Crads)/180)-Cres); //μS/cm   
 124   1          
 125   1        AD5933WriteByte(0x80,0xA1); //控制寄存器，1010 0001 0000 0000 省电模式，2V，一倍放大，内部时钟  0xA100
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    902    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
