C51 COMPILER V9.00   LUX                                                                   07/10/2018 20:20:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LUX
OBJECT MODULE PLACED IN .\Output\LUX.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Modules\LUX.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -g\LUX.lst) TABS(2) OBJECT(.\Output\LUX.obj)

line level    source

   1          /*****************************************************************
   2          **                   大连理工大学 创新创业学院
   3          **                       物联网应用工坊
   4          **---------------------------------------------------------------
   5          ** 项目名称：   WTZP1.0-BlueBerry
   6          ** 日    期：   2018-07-09
   7          ** 作    者：   王世许
   8          **---------------------------------------------------------------
   9          ** 文 件 名：   LUX.c
  10          ** 文件说明：   光照强度测量
  11          *****************************************************************/
  12          /*---------------------INCLUDES----------------------*/
  13          #include "LUX.h"
  14          
  15          /*---------------------VARIABLES---------------------*/
  16          uint8    BUF_0[8];                       //接收数据缓存区       
  17          uint16   dis_data_0;                     //变量
  18          
  19          /*---------------------FUNCTIONS---------------------*/
  20          
  21          
  22          /***********************************************************************
  23          ** 函 数 名： Delay5us()
  24          ** 函数说明： 延时5微妙
  25          **---------------------------------------------------------------------
  26          ** 输入参数： 无
  27          ** 返回参数： 无
  28          ***********************************************************************/
  29          void Delay5us()
  30          {
  31   1        uint8 n = 120;
  32   1        
  33   1        while (n--);
  34   1      }
  35          
  36          /***********************************************************************
  37          ** 函 数 名： delay_ms
  38          ** 函数说明： 延时k毫秒
  39          **---------------------------------------------------------------------
  40          ** 输入参数： k
  41          ** 返回参数： 无
  42          ***********************************************************************/
  43          void delay_ms(uint16 k) 
  44          {           
  45   1        uint16 i,j;       
  46   1        for(i=0;i<k;i++)
  47   1        {     
  48   2          for(j=0;j<24000;j++)      
  49   2          {
  50   3            ;
  51   3          }
  52   2        }           
  53   1      }         
  54          
C51 COMPILER V9.00   LUX                                                                   07/10/2018 20:20:58 PAGE 2   

  55          /***********************************************************************
  56          ** 函 数 名： LUX_Start()
  57          ** 函数说明： 起始信号
  58          **---------------------------------------------------------------------
  59          ** 输入参数： 无
  60          ** 返回参数： 无
  61          ***********************************************************************/
  62          void LUX_Start()
  63          {
  64   1        LUX_SDA=1;
  65   1        
  66   1        LUX_SCL=1;
  67   1        Delay5us();//建立时间是SDA保持时间>4.7us
  68   1        LUX_SDA=0;
  69   1        Delay5us();//保持时间是>4us
  70   1        LUX_SCL=0;      
  71   1      }
  72          
  73          /***********************************************************************
  74          ** 函 数 名： LUX_Stop()
  75          ** 函数说明： 终止信号
  76          **---------------------------------------------------------------------
  77          ** 输入参数： 无
  78          ** 返回参数： 无
  79          ***********************************************************************/
  80          
  81          void LUX_Stop()
  82          {
  83   1        LUX_SDA=0;
  84   1        LUX_SCL=1;
  85   1        Delay5us();
  86   1        LUX_SDA=1;
  87   1        Delay5us();//建立时间大于4.7us
  88   1        LUX_SCL=0;
  89   1        Delay5us();   
  90   1      }
  91          
  92          /***********************************************************************
  93          ** 函 数 名： LUX_SendACK(uint8 ack)
  94          ** 函数说明： 发送应答信号
  95          **---------------------------------------------------------------------
  96          ** 输入参数： ack - 应答信号(0:ACK 1:NAK)
  97          ** 返回参数： 无
  98          ***********************************************************************/
  99          
 100          void LUX_SendACK(uint8 ack)
 101          {
 102   1        if (ack&0x01) LUX_SDA=1;     //写应答信号
 103   1        else  LUX_SDA=0;
 104   1        
 105   1        LUX_SCL=1;                    //拉高时钟线
 106   1        Delay5us();                 //延时
 107   1        LUX_SCL=0;                    //拉低时钟线
 108   1        LUX_SDA=1;
 109   1        Delay5us();                 //延时
 110   1      }
 111          
 112          /***********************************************************************
 113          ** 函 数 名： LUX_RecvACK()
 114          ** 函数说明： 接收应答信号
 115          **---------------------------------------------------------------------
 116          ** 输入参数： 无
C51 COMPILER V9.00   LUX                                                                   07/10/2018 20:20:58 PAGE 3   

 117          ** 返回参数： 返回应答信号
 118          ***********************************************************************/
 119          
 120          uint8 LUX_RecvACK()
 121          {
 122   1        uint8 CY = 0x00;
 123   1        LUX_SDA=1;
 124   1        
 125   1        LUX_SCL=1;              //拉高时钟线
 126   1        Delay5us();                 //延时
 127   1        CY |= LUX_SDA;    //读应答信号
 128   1        Delay5us();                 //延时
 129   1        LUX_SCL=0;              //拉低时钟线
 130   1        return CY;
 131   1      }
 132          
 133          /***********************************************************************
 134          ** 函 数 名： LUX_SendByte(uint8 dat)
 135          ** 函数说明： 发送单个字节数据
 136          **---------------------------------------------------------------------
 137          ** 输入参数： 发送的数据
 138          ** 返回参数： 无
 139          ***********************************************************************/
 140          
 141          void LUX_SendByte(uint8 dat)
 142          {
 143   1        uint8 i;
 144   1        
 145   1        for (i=0; i<8; i++)               //8位计数器
 146   1        {
 147   2          if (dat&0x80) LUX_SDA=1;    //由最高位到最低位
 148   2          else  LUX_SDA=0;              //送数据口
 149   2          
 150   2          Delay5us();                   //延时
 151   2          LUX_SCL=1;                    //拉高时钟线
 152   2          Delay5us();                   //延时
 153   2          LUX_SCL=0;                    //拉低时钟线
 154   2          Delay5us();                   //延时
 155   2          dat <<= 1;                    //移出数据的最高位
 156   2        }
 157   1        
 158   1        LUX_RecvACK();
 159   1      }
 160          
 161          /***********************************************************************
 162          ** 函 数 名： LUX_ReadByte() 
 163          ** 函数说明： 读单个字节数据
 164          **---------------------------------------------------------------------
 165          ** 输入参数： 无
 166          ** 返回参数： 读到的数据
 167          ***********************************************************************/
 168          
 169          uint8 LUX_ReadByte()  //读一个8位数据，从高位读到低位
 170          {
 171   1        uint8 a=0,dat=0;
 172   1        LUX_SDA=1;
 173   1        for(a=0;a<8;a++)
 174   1        {
 175   2          LUX_SCL=1;
 176   2          Delay5us();
 177   2          dat|=LUX_SDA;
 178   2          LUX_SCL=0;
C51 COMPILER V9.00   LUX                                                                   07/10/2018 20:20:58 PAGE 4   

 179   2          Delay5us(); 
 180   2          dat<<=1;
 181   2        }
 182   1        return dat;
 183   1      }
 184          
 185          /***********************************************************************
 186          ** 函 数 名： LUX_Single_Write(uint8 dat)
 187          ** 函数说明： 写BH1750
 188          **---------------------------------------------------------------------
 189          ** 输入参数： 写入的指令
 190          ** 参数说明:  0x46 - 寄存器地址
 191          ** 返回参数： 无
 192          ***********************************************************************/
 193          void LUX_Single_Write(uint8 dat)
 194          {
 195   1        LUX_Start();          //起始信号
 196   1        LUX_SendByte(0x46);   //发送设备地址
 197   1        LUX_SendByte(dat);    //发送数据
 198   1        LUX_Stop();           //发送停止信号
 199   1      }
 200          
 201          /***********************************************************************
 202          ** 函 数 名： LUX_Multiple_read()
 203          ** 函数说明： 连续读取6个地址数据
 204          **---------------------------------------------------------------------
 205          ** 输入参数： 无
 206          ** 返回参数： 无
 207          ***********************************************************************/
 208          void LUX_Multiple_read()
 209          {   
 210   1        uint8 i;  
 211   1        LUX_Start();                  //起始信号
 212   1        LUX_SendByte(0x46+1);         //发送设备地址+读信号
 213   1        
 214   1        for (i=0; i<3; i++)           //连续读取6个地址数据，存储中BUF
 215   1        {
 216   2          BUF_0[i] = LUX_ReadByte();  //BUF[0]存储0x32地址中的数据
 217   2          if (i == 3)
 218   2          {
 219   3            LUX_SendACK(1);           //最后一个数据需要回NOACK
 220   3          }
 221   2          else
 222   2          {   
 223   3            LUX_SendACK(0);           //回应ACK
 224   3          }
 225   2        }
 226   1        
 227   1        LUX_Stop();                   //停止信号
 228   1        delay_ms(5);
 229   1      }
 230          
 231          /***********************************************************************
 232          ** 函 数 名： LUX_Init()
 233          ** 函数说明： 初始化光照传感器
 234          **---------------------------------------------------------------------
 235          ** 输入参数： 无
 236          ** 返回参数： 无
 237          ***********************************************************************/
 238          
 239          void LUX_Init()
 240          {
C51 COMPILER V9.00   LUX                                                                   07/10/2018 20:20:58 PAGE 5   

 241   1        LUX_Single_Write(0x01); 
 242   1      }
 243          
 244          /***********************************************************************
 245          ** 函 数 名： Get_Lux()
 246          ** 函数说明： 光照读取函数
 247          **---------------------------------------------------------------------
 248          ** 输入参数： 无
 249          ** 返回参数： 光照强度（单位：lx)
 250          ***********************************************************************/
 251          
 252          uint32 Get_Lux()
 253          {  
 254   1        f32 temp;
 255   1        LUX_Single_Write(0x01);   // 通电
 256   1        LUX_Single_Write(0x10);
 257   1      
 258   1        delay_ms(200);            //延时180ms
 259   1        
 260   1        LUX_Multiple_read();      //连续读出数据，存储在BUF中
 261   1        
 262   1        LUX_Single_Write(0x00);   // 断电
 263   1        
 264   1        dis_data_0=BUF_0[0];
 265   1        dis_data_0=(dis_data_0<<8)+BUF_0[1]; //合成数据，即光照数据
 266   1      
 267   1        temp=(float)dis_data_0/1.2;
 268   1        return (uint32)(temp*1.4);
 269   1      } 
 270          
 271          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
