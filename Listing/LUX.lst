C51 COMPILER V9.00   LUX                                                                   07/14/2018 20:59:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LUX
OBJECT MODULE PLACED IN .\Output\LUX.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Modules\LUX.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -g\LUX.lst) TABS(2) OBJECT(.\Output\LUX.obj)

line level    source

   1          /*****************************************************************
   2          **                   大连理工大学 创新创业学院
   3          **                       物联网应用工坊
   4          **---------------------------------------------------------------
   5          ** 项目名称：   WTZP1.0-BlueBerry
   6          ** 日    期：   2018-07-09
   7          ** 作    者：   王世许
   8          **---------------------------------------------------------------
   9          ** 文 件 名：   LUX.c
  10          ** 文件说明：   光照强度测量
  11          *****************************************************************/
  12          /*---------------------INCLUDES----------------------*/
  13          #include "LUX.h"
  14          
  15          /*---------------------VARIABLES---------------------*/
  16          uint8    BUF_0[8];                       //接收数据缓存区       
  17          uint16   dis_data_0;                     //变量
  18          
  19          /*---------------------FUNCTIONS---------------------*/
  20          /***********************************************************************
  21          ** 函 数 名： LUX_Start()
  22          ** 函数说明： 起始信号
  23          **---------------------------------------------------------------------
  24          ** 输入参数： 无
  25          ** 返回参数： 无
  26          ***********************************************************************/
  27          void LUX_Start()
  28          {
  29   1        LUX_SDA=1;
  30   1        
  31   1        LUX_SCL=1;
  32   1        Delay5us();//建立时间是SDA保持时间>4.7us
  33   1        LUX_SDA=0;
  34   1        Delay5us();//保持时间是>4us
  35   1        LUX_SCL=0;      
  36   1      }
  37          
  38          /***********************************************************************
  39          ** 函 数 名： LUX_Stop()
  40          ** 函数说明： 终止信号
  41          **---------------------------------------------------------------------
  42          ** 输入参数： 无
  43          ** 返回参数： 无
  44          ***********************************************************************/
  45          
  46          void LUX_Stop()
  47          {
  48   1        LUX_SDA=0;
  49   1        LUX_SCL=1;
  50   1        Delay5us();
  51   1        LUX_SDA=1;
  52   1        Delay5us();//建立时间大于4.7us
  53   1        LUX_SCL=0;
  54   1        Delay5us();   
C51 COMPILER V9.00   LUX                                                                   07/14/2018 20:59:13 PAGE 2   

  55   1      }
  56          
  57          /***********************************************************************
  58          ** 函 数 名： LUX_SendACK(uint8 ack)
  59          ** 函数说明： 发送应答信号
  60          **---------------------------------------------------------------------
  61          ** 输入参数： ack - 应答信号(0:ACK 1:NAK)
  62          ** 返回参数： 无
  63          ***********************************************************************/
  64          
  65          void LUX_SendACK(uint8 ack)
  66          {
  67   1        if (ack&0x01) LUX_SDA=1;     //写应答信号
  68   1        else  LUX_SDA=0;
  69   1        
  70   1        LUX_SCL=1;                    //拉高时钟线
  71   1        Delay5us();                 //延时
  72   1        LUX_SCL=0;                    //拉低时钟线
  73   1        LUX_SDA=1;
  74   1        Delay5us();                 //延时
  75   1      }
  76          
  77          /***********************************************************************
  78          ** 函 数 名： LUX_RecvACK()
  79          ** 函数说明： 接收应答信号
  80          **---------------------------------------------------------------------
  81          ** 输入参数： 无
  82          ** 返回参数： 返回应答信号
  83          ***********************************************************************/
  84          
  85          uint8 LUX_RecvACK()
  86          {
  87   1        uint8 CY = 0x00;
  88   1        LUX_SDA=1;
  89   1        
  90   1        LUX_SCL=1;              //拉高时钟线
  91   1        Delay5us();                 //延时
  92   1        CY |= LUX_SDA;    //读应答信号
  93   1        Delay5us();                 //延时
  94   1        LUX_SCL=0;              //拉低时钟线
  95   1        return CY;
  96   1      }
  97          
  98          /***********************************************************************
  99          ** 函 数 名： LUX_SendByte(uint8 dat)
 100          ** 函数说明： 发送单个字节数据
 101          **---------------------------------------------------------------------
 102          ** 输入参数： 发送的数据
 103          ** 返回参数： 无
 104          ***********************************************************************/
 105          
 106          void LUX_SendByte(uint8 dat)
 107          {
 108   1        uint8 i;
 109   1        
 110   1        for (i=0; i<8; i++)               //8位计数器
 111   1        {
 112   2          if (dat&0x80) LUX_SDA=1;    //由最高位到最低位
 113   2          else  LUX_SDA=0;              //送数据口
 114   2          
 115   2          Delay5us();                   //延时
 116   2          LUX_SCL=1;                    //拉高时钟线
C51 COMPILER V9.00   LUX                                                                   07/14/2018 20:59:13 PAGE 3   

 117   2          Delay5us();                   //延时
 118   2          LUX_SCL=0;                    //拉低时钟线
 119   2          Delay5us();                   //延时
 120   2          dat <<= 1;                    //移出数据的最高位
 121   2        }
 122   1        
 123   1        LUX_RecvACK();
 124   1      }
 125          
 126          /***********************************************************************
 127          ** 函 数 名： LUX_ReadByte() 
 128          ** 函数说明： 读单个字节数据
 129          **---------------------------------------------------------------------
 130          ** 输入参数： 无
 131          ** 返回参数： 读到的数据
 132          ***********************************************************************/
 133          
 134          uint8 LUX_ReadByte()  //读一个8位数据，从高位读到低位
 135          {
 136   1        uint8 a=0,dat=0;
 137   1        LUX_SDA=1;
 138   1        for(a=0;a<8;a++)
 139   1        {
 140   2          LUX_SCL=1;
 141   2          Delay5us();
 142   2          dat|=LUX_SDA;
 143   2          LUX_SCL=0;
 144   2          Delay5us(); 
 145   2          dat<<=1;
 146   2        }
 147   1        return dat;
 148   1      }
 149          
 150          /***********************************************************************
 151          ** 函 数 名： LUX_Single_Write(uint8 dat)
 152          ** 函数说明： 写BH1750
 153          **---------------------------------------------------------------------
 154          ** 输入参数： 写入的指令
 155          ** 参数说明:  0x46 - 寄存器地址
 156          ** 返回参数： 无
 157          ***********************************************************************/
 158          void LUX_Single_Write(uint8 dat)
 159          {
 160   1        LUX_Start();          //起始信号
 161   1        LUX_SendByte(0x46);   //发送设备地址
 162   1        LUX_SendByte(dat);    //发送数据
 163   1        LUX_Stop();           //发送停止信号
 164   1      }
 165          
 166          /***********************************************************************
 167          ** 函 数 名： LUX_Multiple_read()
 168          ** 函数说明： 连续读取6个地址数据
 169          **---------------------------------------------------------------------
 170          ** 输入参数： 无
 171          ** 返回参数： 无
 172          ***********************************************************************/
 173          void LUX_Multiple_read()
 174          {   
 175   1        uint8 i;  
 176   1        LUX_Start();                  //起始信号
 177   1        LUX_SendByte(0x46+1);         //发送设备地址+读信号
 178   1        
C51 COMPILER V9.00   LUX                                                                   07/14/2018 20:59:13 PAGE 4   

 179   1        for (i=0; i<3; i++)           //连续读取6个地址数据，存储中BUF
 180   1        {
 181   2          BUF_0[i] = LUX_ReadByte();  //BUF[0]存储0x32地址中的数据
 182   2          if (i == 3)
 183   2          {
 184   3            LUX_SendACK(1);           //最后一个数据需要回NOACK
 185   3          }
 186   2          else
 187   2          {   
 188   3            LUX_SendACK(0);           //回应ACK
 189   3          }
 190   2        }
 191   1        
 192   1        LUX_Stop();                   //停止信号
 193   1        delay_ms(5);
 194   1      }
 195          
 196          /***********************************************************************
 197          ** 函 数 名： LUX_Init()
 198          ** 函数说明： 初始化光照传感器
 199          **---------------------------------------------------------------------
 200          ** 输入参数： 无
 201          ** 返回参数： 无
 202          ***********************************************************************/
 203          
 204          void InitLUX()
 205          {
 206   1        LUX_Single_Write(0x01); 
 207   1      }
 208          
 209          /***********************************************************************
 210          ** 函 数 名： Get_Lux()
 211          ** 函数说明： 光照读取函数
 212          **---------------------------------------------------------------------
 213          ** 输入参数： 无
 214          ** 返回参数： 光照强度（单位：lx)
 215          ***********************************************************************/
 216          
 217          uint32 Get_Lux()
 218          {  
 219   1        f32 temp;
 220   1        LUX_Single_Write(0x01);   // 通电
 221   1        LUX_Single_Write(0x10);
 222   1      
 223   1        delay_ms(200);            //延时180ms
 224   1        
 225   1        LUX_Multiple_read();      //连续读出数据，存储在BUF中
 226   1        
 227   1        LUX_Single_Write(0x00);   // 断电
 228   1        
 229   1        dis_data_0=BUF_0[0];
 230   1        dis_data_0=(dis_data_0<<8)+BUF_0[1]; //合成数据，即光照数据
 231   1      
 232   1        temp=(float)dis_data_0/1.2;
 233   1        return (uint32)(temp*1.4);
 234   1      } 
 235          
 236          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
C51 COMPILER V9.00   LUX                                                                   07/14/2018 20:59:13 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
